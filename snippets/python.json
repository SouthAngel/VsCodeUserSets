{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Class from object": {
		"prefix": "classsuper",
		"body": "class $1(object):\n    def __init__(self):\n        super($1, self).__init__()"
	},
	"Class function super parent": {
		"prefix": "defself",
		"body": "def $1(self):\n    super(${2:object}, self).$1($3)"
	},
	"Code title": {
		"prefix": "code:",
		"body": "# -*- coding: utf-8 -*-"
	},
	"If run in main": {
		"prefix": "ifmain",
		"body": "if __name__ == \"__main__\":\n    ${1:print(\"Under main\")}"
	},
	"Default return": {
		"prefix": "retret",
		"body": "ret = ${1:[]}\nreturn ret"
	},
	"Print message quikly": {
		"prefix": "printm",
		"body": "print(\"$1\")"
	}
}